CREATE TABLE Klienci (
  id_klient integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  id_osoba  integer NOT NULL, 
  PRIMARY KEY (id_klient));
CREATE TABLE Zamówienia (
  id_zamówienia             integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  id_klienta                integer NOT NULL, 
  data_złożenia_zamówienia  date NOT NULL, 
  data_przyjęcia_zamówienia date, 
  data_wysyłki              date, 
  data_opłacenia            date, 
  cena_zakupu               decimal(10, 2) NOT NULL, 
  PRIMARY KEY (id_zamówienia));
CREATE TABLE Adresy (
  id_adres     integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  miejscowość  varchar(50) NOT NULL, 
  ulica        varchar(50), 
  nr_domu      varchar(10) NOT NULL, 
  nr_lokalu    varchar(10), 
  kod_pocztowy char(6) NOT NULL, 
  "Column"     integer, 
  PRIMARY KEY (id_adres));
CREATE TABLE Kategorie (
  id_kategoria    integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  nazwa_kategorii varchar(45) NOT NULL UNIQUE, 
  PRIMARY KEY (id_kategoria));
CREATE TABLE Produkty (
  id_produkt            integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  id_producent          integer NOT NULL, 
  id_kategoria          integer NOT NULL, 
  id_rozmiar            integer NOT NULL, 
  nazwa_produktu        varchar(45), 
  opis                  varchar(200), 
  cena_netto_sprzedaży  decimal(10, 2), 
  procent_vat_sprzedaży decimal(10, 2), 
  PRIMARY KEY (id_produkt));
CREATE TABLE Pracownicy (
  id_pracownik      integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  id_osoba          integer NOT NULL, 
  konto_aktywne     bit NOT NULL, 
  data_zatrudnienia date, 
  data_zwolnienia   date, 
  PRIMARY KEY (id_pracownik));
CREATE TABLE Zwrot (
  id_zwrotu                 integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  id_powiązanego_zamówienia integer NOT NULL, 
  data_złożenia             date NOT NULL, 
  data_realizacji           date, 
  PRIMARY KEY (id_zwrotu));
CREATE TABLE Użytkownik (
  id_osoba integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  Login    varchar(64) NOT NULL UNIQUE, 
  Hasło    varchar(64) NOT NULL, 
  Imię     varchar(20), 
  Nazwisko varchar(50), 
  PRIMARY KEY (id_osoba));
CREATE TABLE Osoby_Adresy (
  id_osoba integer NOT NULL, 
  id_adres integer NOT NULL, 
  PRIMARY KEY (id_osoba, 
  id_adres));
CREATE TABLE Producent (
  id_producent integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  nazwa        varchar(20) NOT NULL UNIQUE, 
  PRIMARY KEY (id_producent));
CREATE TABLE "Adresy email" (
  id_email integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  email    varchar(64) NOT NULL UNIQUE, 
  PRIMARY KEY (id_email));
CREATE TABLE "Numery telefonu" (
  id_telefon     integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  numer_telefonu integer NOT NULL UNIQUE, 
  PRIMARY KEY (id_telefon));
CREATE TABLE "Numery telefonu_Osoby" (
  id_osoba   integer NOT NULL, 
  id_telefon integer NOT NULL, 
  PRIMARY KEY (id_osoba, 
  id_telefon));
CREATE TABLE "Adresy email_Osoby" (
  id_osoba integer NOT NULL, 
  id_email integer NOT NULL, 
  PRIMARY KEY (id_osoba, 
  id_email));
CREATE TABLE Zamówienia_Produkty (
  id_zamówienia integer NOT NULL, 
  id_produkt    integer NOT NULL, 
  ilość         integer NOT NULL, 
  cena_produktu decimal(10, 2) NOT NULL, 
  PRIMARY KEY (id_zamówienia, 
  id_produkt));
CREATE TABLE Zwrot_Produkty (
  id_zwrotu   integer NOT NULL, 
  id_produktu integer NOT NULL, 
  ilość       integer NOT NULL, 
  cena        decimal(10, 2) NOT NULL, 
  PRIMARY KEY (id_zwrotu, 
  id_produktu));
CREATE TABLE Rozmiar (
  id_rozmiar integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1), 
  rozmiar    varchar(10) NOT NULL UNIQUE, 
  PRIMARY KEY (id_rozmiar));
CREATE VIEW "View" AS
SELECT data_zwolnienia
FROM Pracownicy;
CREATE VIEW "View" AS
SELECT data_zwolnienia
FROM Pracownicy;
CREATE VIEW "View" AS
SELECT data_zwolnienia
FROM Pracownicy;
CREATE VIEW "View" AS
SELECT data_zwolnienia
FROM Pracownicy;
CREATE VIEW "View" AS
SELECT data_zwolnienia
FROM Pracownicy;
CREATE VIEW "View" AS
SELECT data_zwolnienia
FROM Pracownicy;
ALTER TABLE Klienci ADD CONSTRAINT FKKlienci734610 FOREIGN KEY (id_osoba) REFERENCES Użytkownik (id_osoba);
ALTER TABLE Pracownicy ADD CONSTRAINT FKPracownicy613837 FOREIGN KEY (id_osoba) REFERENCES Użytkownik (id_osoba);
ALTER TABLE Osoby_Adresy ADD CONSTRAINT FKOsoby_Adre117052 FOREIGN KEY (id_osoba) REFERENCES Użytkownik (id_osoba);
ALTER TABLE Osoby_Adresy ADD CONSTRAINT FKOsoby_Adre207878 FOREIGN KEY (id_adres) REFERENCES Adresy (id_adres);
ALTER TABLE "Numery telefonu_Osoby" ADD CONSTRAINT "FKNumery tel83454" FOREIGN KEY (id_telefon) REFERENCES "Numery telefonu" (id_telefon);
ALTER TABLE "Numery telefonu_Osoby" ADD CONSTRAINT "FKNumery tel222680" FOREIGN KEY (id_osoba) REFERENCES Użytkownik (id_osoba);
ALTER TABLE "Adresy email_Osoby" ADD CONSTRAINT "FKAdresy ema219072" FOREIGN KEY (id_email) REFERENCES "Adresy email" (id_email);
ALTER TABLE "Adresy email_Osoby" ADD CONSTRAINT "FKAdresy ema416738" FOREIGN KEY (id_osoba) REFERENCES Użytkownik (id_osoba);
ALTER TABLE Zamówienia ADD CONSTRAINT FKZamówienia604264 FOREIGN KEY (id_klienta) REFERENCES Klienci (id_klient);
ALTER TABLE Zamówienia_Produkty ADD CONSTRAINT FKZamówienia899522 FOREIGN KEY (id_zamówienia) REFERENCES Zamówienia (id_zamówienia);
ALTER TABLE Zamówienia_Produkty ADD CONSTRAINT FKZamówienia303091 FOREIGN KEY (id_produkt) REFERENCES Produkty (id_produkt);
ALTER TABLE Zwrot_Produkty ADD CONSTRAINT FKZwrot_Prod755279 FOREIGN KEY (id_zwrotu) REFERENCES Zwrot (id_zwrotu);
ALTER TABLE Zwrot_Produkty ADD CONSTRAINT FKZwrot_Prod905821 FOREIGN KEY (id_produktu) REFERENCES Produkty (id_produkt);
ALTER TABLE Zwrot ADD CONSTRAINT FKZwrot600624 FOREIGN KEY (id_powiązanego_zamówienia) REFERENCES Zamówienia (id_zamówienia);
ALTER TABLE Produkty ADD CONSTRAINT FKProdukty909807 FOREIGN KEY (id_kategoria) REFERENCES Kategorie (id_kategoria);
ALTER TABLE Produkty ADD CONSTRAINT FKProdukty16635 FOREIGN KEY (id_producent) REFERENCES Producent (id_producent);
ALTER TABLE Produkty ADD CONSTRAINT FKProdukty440814 FOREIGN KEY (id_rozmiar) REFERENCES Rozmiar (id_rozmiar);
